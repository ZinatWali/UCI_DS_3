install.packages("rJava")
library(rJava)
library(xlsx)
source('cachematrix.R')
getwd()
setwd('D:\Dev\Data Science\R Programming\assignment2\ProgrammingAssignment2')
setwd('D:/Dev/Data Science/R Programming/assignment2/ProgrammingAssignment2')
source('cachematrix.R')
b <- matrix(c(2,3,4,5), nrow = 2, ncol=2)
b
solve(b)
cacheSolve(b)
class(b)
c <- makeCacheMatrix(b)
cacheSolve(c)
cacheSolve(c)
source('cachematrix.R')
cacheSolve(c)
cacheSolve(c)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", mode="w")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","rdata3" mode="w")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","rdata3")
dt <- read.csv(rdata3)
dt <- read.csv("rdata3")
dt
dt$ACR >= 3
dt$ACR >= 3 && dt$AGS >= 6
dt$ACR >= 3 & dt$AGS >= 6
agricultureLogical <- dt$ACR >= 3 & dt$AGS >= 6
?which
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
?readJPEG
img <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=true)
img <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native="TRUE")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "jeff.jpeg", wb="TRUE")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "jeff.jpeg", mode="wb")
?readJPEG
img <- readJPEG(system.file("img", "jeff.JPEG", package="jpeg"), TRUE)
img <- readJPEG(system.file("img", "jeff.jpeg", package="jpeg"), TRUE)
img <- readJPEG(jeff.jpeg", native=TRUE)
img <- readJPEG("jeff.jpeg", native=TRUE)
?quantile
quantile(img)
quantile(img, probs=cbind(0.3, 0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "rgdata33.csv" mode="w")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "rgdata33.csv", mode="w")
gdata <- read.csv("rgdata33.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "redata33.csv", mode="w")
edata <- read.csv("redata33.csv")
head(gdata)
colnames(gdata)
?colnames
sort(gdata$"Gross.domestic.product.2012, decreasing=TRUE)
sort(gdata$"Gross.domestic.product.2012", decreasing=TRUE)
gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE), ]
gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE), 1]
colnames(edata)
gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE), 2]
gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE), 3]
gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE), 4]
sortedgdata <- gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE)]
sortedgdata <- gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE),]
sortedgdata[13,]
?read.csv
gdata <- read.csv("rgdata33.csv", header=FALSE)
sort(gdata$"Gross.domestic.product.2012", decreasing=TRUE)
sortedgdata <- gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE)]
sortedgdata <- gdata[order(gdata$"Gross.domestic.product.2012", decreasing=TRUE), ]
sort(gdata$"Gross.domestic.product.2012", decreasing=TRUE)
sort(gdata$1, decreasing=TRUE)
sort(gdata[1], decreasing=TRUE)
sort(gdata[1], decreasing=TRUE, )
sort(gdata[1, ], decreasing=TRUE)
sort(gdata[, 2], decreasing=TRUE)
gdata <- read.csv("rgdata33.csv", skip=10)
head(gdata)
gdata <- read.csv("rgdata33.csv", header=FALSE, skip=10)
head(gdata)
sort(gdata[, 2], decreasing=TRUE)
sort(gdata[13, 2], decreasing=TRUE)
gdata <- read.csv("rgdata33.csv", header=FALSE, skip=5)
head(gdata)
sort(gdata$v1, decreasing=TRUE)
sort(gdata$V1, decreasing=TRUE)
sort(gdata$V2, decreasing=TRUE)
sorter <- sort(gdata$V2, decreasing=TRUE)
sorter[13]
head(gdata)
sortedgdata <- gdata[order(gdata$V2, decreasing=TRUE), ]
sortedgdata[13,]
sortedgdata <- gdata[order(gdata$V2, decreasing=TRUE, na.last=T), ]
sortedgdata[13,]
?order
colnames(edata)
edata$CountryCode
mdata <- merge(gdata, edata, by.x="V1", by.y="CountryCode", all=F)
nrow(mdata)
colnames(mdata)
nrow(gdata)
nrow(edata)
mdata$V1
mdata <- merge(gdata, edata, by.x="V1", by.y="CountryCode", all=T)
nrow(mdata)
?merge
edata$CountryCode
mdata <- merge(gdata, edata, by.x="V1", by.y="CountryCode", all=FALSE)
nrow(mdata)
edata$CountryCode[is.na(CountryCode) == F]
edata$CountryCode[is.na(edata$CountryCode) == F]
mdata <- merge(gdata, edata, by.x="V1", by.y="CountryCode", all=TRUE)
nrow(mdata)
head(gdata)
mdata <- merge(gdata, edata, by.x="V1", by.y="CountryCode", all=FALSE)
nrow(mdata)
gdata$V1
gdata[V2 >= 1 & V2 <= 190]
gdata[V2 >= 1 & V2 <= 190]
gdata[(gdata$V2 >= 1 & gdata$V2 <= 190), ]
class (gdata$V2)
gdata[1]
gdata[2]
gdata[2] <- lapply(gdata[2], as.character)
class (gdata$V2)
gdata[2]
gdata[2] <- lapply(gdata[2], as.numeric)
class (gdata$V2)
gdata[2]
gdata[(gdata$V2 >= 1 & gdata$V2 <= 190), ]
gdata[(gdata$V2 >= 1 & gdata$V2 <= 190), ]
gdata[(!is.na(gdata$V2), ]
gdata[(!is.na(gdata$V2)]
gdata[(!is.na(gdata$V2)), ]
gdata <- gdata[(!is.na(gdata$V2)), ]
mdata <- merge(gdata, edata, by.x="V1", by.y="CountryCode", all=FALSE)
nrow(mdata)
sorter <- sort(mdata$V2, decreasing=TRUE)
sorter
sortedgdata <- mdata[order(mdata$V2, decreasing=TRUE), ]
sortedgdata
sortedgdata[13,]
colnames(mdata)
mdata$"Income.Group"
mdata[mdata$"Income.Group" == "High income: OECD"]
mdata[mdata$"Income.Group" == "High income: OECD",]
mdata[mdata$"Income.Group" == "High income: OECD",V2]
mdata[(mdata$"Income.Group" == "High income: OECD"),V2]
mdata[(mdata$"Income.Group" == "High income: OECD"),]
mdata[(mdata$"Income.Group" == "High income: OECD"),]$V2
mean(mdata[(mdata$"Income.Group" == "High income: OECD"),]$V2)
mean(mdata[(mdata$"Income.Group" == "High income: nonOECD"),]$V2)
?quantile
install.package("Hmisk")
install.packages("Hmisk")
install.package("Hmisc")
install.packages("Hmisc")
library("Hmisc")
cut2
?cut2
qdata <- cut2(mdata$V2, g=5)
?table
table(qdata, mdata$Income.Group)
install.packages('plyr')
library(plyr)
head(arrange(mdata, V2))
head(arrange(mdata, V2)[, 1:4])
head(arrange(mdata, V2, decreasing=T)[, 1:4])
mean(mdata[(mdata$"Income.Group" == "High income: OECD"),]$V2)
?tapply
tapply(mdata, mdata$Income.Group, mean)
dim(mdata)
tapply(mdata, mdata[mdata$Income.Group,], mean)
tapply(mdata$V2, mdata[mdata$Income.Group,], mean)
tapply(mdata$V2, mdata$Income.Group, mean)
setwd("D:\Dev\Data Science\Getting and Cleaning\UCI_DS_3")
setwd("D:/Dev/Data Science/Getting and Cleaning/UCI_DS_3")
source("run_analysis")
source("run_analysis.R")
read.table("UCI HAR Dataset/train/X_train.txt")
?read.table
read.table("UCI HAR Dataset/train/X_train.txt", nrows = 10)
read.table("UCI HAR Dataset/train/y_train.txt")
train_data_set <- read.table("UCI HAR Dataset/train/X_train.txt")
train_label_set <- read.table("UCI HAR Dataset/train/y_train.txt")
train_subject_set <- read.table("UCI HAR Dataset/train/y_train.txt");
nrows(train_data_set)
nrow(train_data_set)
nrow(train_label_set)
nrow(train_subject_set)
a<- [1:4, 2,2]
a <- matrix(2,2)
b <- matrix(2,2)
a <- 1:4
a
?matrix
a<- [1:4, nrow=2, ncol=2]
a<- matrix(1:4, nrow=2, ncol=2)
a
b<- matrix(6:9, nrow=2, ncol=2)
b
cbind(a,b)
train_set <- cbind(train_data_set, train_label_set, train_subject_set)
train_set[1, ]
train_data_set <- read.table("UCI HAR Dataset/train/X_train.txt")
train_label_set <- read.table("UCI HAR Dataset/train/y_train.txt")
train_subject_set <- read.table("UCI HAR Dataset/train/subject_train.txt")
train_set <- cbind(train_data_set, train_label_set, train_subject_set)
test_data_set <- read.table("UCI HAR Dataset/test/X_test.txt")
test_label_set <- read.table("UCI HAR Dataset/test/y_test.txt")
test_subject_set <- read.table("UCI HAR Dataset/test/subject_test.txt")
test_set <- cbind(test_data_set, test_label_set, test_subject_set)
train_set[1, ]
?cbind
train_set <- cbind(train_data_set, train_label_set, train_subject_set, deparse.level=1)
train_set[1, ]
cbind(a,b)
rbind(a,b)
all_obs <- rbind(train_set, test_set)
ncol(allobs)
ncol(all_obs)
nrow(all_obs)
data_set <- rbind(train_data_set, test_data_set)
label_set <- rbind(train_label_set, test_label_set)
subject_set < rbind(train_subject_set, test_subject_set)
data_set <- rbind(train_data_set, test_data_set)
label_set <- rbind(train_label_set, test_label_set)
subject_set <- rbind(train_subject_set, test_subject_set)
ncol(data_set)
now(data_set)
nrow(data_set)
feature_set <- read.table("UCI HAR Dataset/features.txt")
ncol(feature_set)
nrow(feature_set)
?grep
?gsub
?regexp
?gsub
?grep
grep[".*-mean", feature_set$V2]
class(feature_set$V2)
colnames(feature_set)
feature_set$V2
?read_table
?read.table
feature_set <- read.table("UCI HAR Dataset/features.txt", colClasses="c")
feature_set <- read.table("UCI HAR Dataset/features.txt", colClasses="character")
grep[".*-mean", feature_set$V2]
class(feature_set$V2)
?grep
grep["[.*-mean]", feature_set$V2]
grep["[-mean]", feature_set$V2]
grep["[.*-mean]", 1:4]
grep("[.*-mean]", feature_set$V2)
feature_set$V2
grep("[.*-mean]", feature_set$V2)
feature_set$V2
grep("[.*-mean]", feature_set$V2)
grepl(feature_set$V2, "mean")
feature_set[grepl(feature_set$V2, "mean"), ]
feature_set[grepl("mean", feature_set$V2), ]
feature_set[grepl("mean", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features <- feature_set[grepl("mean", feature_set$V2) | grepl("std", feature_set$V2), ]
nrow(relevent_features)
relevent_features[79, ]
relevent_features$V1
data_set[, 1:4]
head(data_set[, 1:4])
head(data_set[, relevent_features$V1])
relevent_features$V1
class(V1)
class(relevent_features$V1)
relevent_features <- feature_set[grepl("mean()", feature_set$V2) | grepl("std", feature_set$V2), ]
nrow(relevent_features)
relevent_features
relevent_features <- feature_set[grepl("mean()", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features
relevent_features <- feature_set[grepl("-mean()", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features
relevent_features <- feature_set[grepl("-mean()-", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features
relevent_features <- feature_set[grepl("-mean()", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features
relevent_features <- feature_set[grepl("-mean:(::):", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features
relevent_features <- feature_set[grepl("[-mean:(::):]", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features
relevent_features <- feature_set[grepl("mean[:(][::):]", feature_set$V2) | grepl("std", feature_set$V2), ]
relevent_features
nrow(relevent_features)
relevent_features <- feature_set[grepl("mean[:(][:):]", feature_set$V2) | grepl("std", feature_set$V2), ]
nrow(relevent_features)
relevent_features <- feature_set[grepl("mean[:(:][:):]", feature_set$V2) | grepl("std", feature_set$V2), ]
nrow(relevent_features)
relevent_features <- feature_set[grepl("mean[:():]", feature_set$V2) | grepl("std", feature_set$V2), ]
nrow(relevent_features)
relevent_features <- feature_set[grepl("mean[:():] | std", feature_set$V2), ]
nrow(relevent_features)
relevent_features <- feature_set[grepl("mean[:():] | std"), feature_set$V2), ]
relevent_features <- feature_set[grepl("mean[:():]", feature_set$V2) | grepl("std", feature_set$V2), ]
nrow(relevent_features)
relevent_features
extracted_measurements <- data_set[, relevent_features$V1])
extracted_measurements <- data_set[, relevent_features$V1]
extracted_measurements <- data_set[, as.numeric(relevent_features$V1)]
extracted_measurements
ncol(extracted_measurements)
nrow(extracted_measurements)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", colClasses="character")
activity_label
activity_labels
?merge
merge(label_set, activity_labels, by.x = "V1", by.y = "V1", all=TRUE)
label_set
merge(label_set, activity_labels, by.x = "V1", by.y = "V1", all=TRUE)
activity_labels
named_label_set <- merge(label_set, activity_labels, by.x = "V1", by.y = "V1", all=TRUE)
named_label_set
data_set <- data_set[, relevent_features$V1]
data_set <- data_set[, as.numeric(relevent_features$V1)]
ncol(data_set)
nrow(data_set)
data_set <- cbind(data_set, named_label_set$V2)
data_set[1, ]
data_set <- cbind(data_set, subject_set)
data_set
?tapply
?mean
?by
ncol(data_set)
by(data_set, 67:68, mean)
by(data_set, cbind(67,68), mean)
col_names(data_set)
colnames(data_set)
relevent_features$V2
colnames(data_set) <- relevent_features$V2
colnames(data_set)
colnames(data_set) <- cbind(relevent_features$V2, "activity", "subject")
data_set <- rbind(train_data_set, test_data_set)
data_set <- data_set[, as.numeric(relevent_features$V1)]
data_set <- cbind(subject_set, data_set, named_label_set$V2)
colnames(data_set)
colnames(data_set) <- cbind(relevent_features$V2, "activity", "subject")
cbind(relevent_features$V2, "activity", "subject")
rbind(relevent_features$V2, "activity", "subject")
colnames(data_set) <- rbind(relevent_features$V2, "activity", "subject")
feature_names <- relevent_features$V2
rbind(feature_names, "activity", "subject")
union(feature_names, "activity", "subject")
union(feature_names, "activity")
?union
?append
append(feature_names, cbind("subject", "activity"), after=0)
data_set <- rbind(train_data_set, test_data_set)
data_set <- data_set[, as.numeric(relevent_features$V1)]
ncol(data_set)
data_set <- cbind(subject_set,named_label_set$V2, data_set)
ncol(data_set)
feature_names <- relevent_features$V2
colnames(data_set) <- append(feature_names, cbind("subject", "activity"), after=0)
colnames(data_set)
data_set[1, ]
by(data_set, data_set$subject, mean)
?dt
?melt
?df
?dt
data_set[data_set$subject == 1, ]
nrow(data_set[data_set$subject == 1, ])
data.frame(ID=data_set[,1:2], Means=rowMeans(DF[,-2]))
data.frame(ID=data_set[,1:2], Means=rowMeans(data_set[,-2]))
meanie <- data.frame(ID=data_set[,1:2], Means=rowMeans(data_set[,-2]))
colnames(meanie)
meanie <- data.frame(ID=data_set[,1:2], Means=colMeans(data_set[,-2]))
meanie <- data.frame(ID=data_set[,1:2], Means=rowMeans(data_set[,-2]))
meanie[1, 0]
meanie[1, ]
meanie <- data.frame(ID=data_set[,1:2], Means=rowMeans(data_set[,3:68]))
colnames(meanie)
nrow(meanie)
meanie <- data.frame(data_set[,1:2], colMeans(data_set[,3:68]))
?aggregate
aggregate(dataset[, 3:68], by=c(subject, activity), mean)
aggregate(data_set[, 3:68], by=c(subject, activity), mean)
aggregate(data_set[, 3:68], by=c("subject", "activity"), mean)
aggregate(data_set[, 3:68], by=dateset$subject, mean)
aggregate(data_set[, 3:68], by=date_set$subject, mean)
aggregate(data_set[, 3:68], by=data_set$subject, mean)
aggregate(data_set[, 3:68], by=data_set$"subject", mean)
data_set$subject
aggregate(data_set[, 3:68], by=data_set$"subject", mean)
aggregate(data_set[, 3:68], by=list(data_set$subject), mean)
meanie <- aggregate(data_set[, 3:68], by=list(data_set$subject), mean)
ncol(meanie)
nrow(meanie)
meanie <- aggregate(data_set[, 3:68], by=list(data_set$subject, data_set$activity), mean)
nrow(meanie)
ncol(meanie)
meanie[1,]
meanie <- aggregate(data_set[, 3:68], by=list(data_set$subject, data_set$activity), mean)
?write.csv
colnames(data_csv)
colnames(data_set)
write.csv(data_set, "tidy_data_1.csv")
meanie[1,]
meanie[,1]
meanie1 <- data_set[(data_set$subject == 10 & data_set$activity="LAYING"), 3]
meanie1 <- data_set[(data_set$subject == 10 && data_set$activity="LAYING"), 3]
meanie1 <- data_set[(data_set$subject == 10), 3]
meanie1 <- data_set[(data_set$subject == 10 AND data_set$activity="LAYING"), 3]
meanie1 <- data_set[(data_set$subject == 10 & data_set$activity="LAYING"), 3]
meanie1 <- data_set[(data_set$subject == 10 & data_set$activity=="LAYING"), 3]
meanie1
mean(meanie1)
meanie[, 1:2]
Sort(meanie[, 1:2]$Group.2)
sort(meanie[, 1:2]$Group.2)
sort(meanie[, 1:2]$Group.1)
colnames(meanie)
?aggregate
?write.csv
write.csv(data_set, "tidy_data_1.csv", row.names=0)
write.csv(data_set, "tidy_data_1.csv", row.names=F)
write.csv(data_set, "tidy_data_1.csv", row.names=F)
subject_set
summary_data_set <- aggregate(data_set[, 3:68], by=list(data_set$subject, data_set$activity), mean)
#rename columns???
write.csv(summary_data_set, "tidy_data_2.csv", row.names=F)
?aggregate
result <- aggregate(data_set[, 3:68], by=list(data_set$subject, data_set$activity), mean)
summary_data_set <- result[order(result$Group.1, result$Group.2), ]
write.csv(summary_data_set, "tidy_data_2.csv", row.names=F)
write.csv(summary_data_set, "tidy_data_2.csv", row.names=F)
nrow(result)
nrow(summary_data_set)
source("run_analysis.R")
source("run_analysis.R")
source("run_analysis.R")
run_analysis
run_analysis()
nrow(label_set)
colnames[data_set]
colnames(data_set)
result <- aggregate(data_set[, 3:68], by=list(data_set$subject, data_set$activity), mean)
result <- aggregate(data_set[, 3:68], by=list(data_set$subject), mean)
nrow(result)
library(reshape2)
?melt
meldata <- melt(data_set, id=c("subject", "activity"))
?dcast
colnames(meldata)
dcast(meldata, subject~activity~variable, mean)
dcast(meldata, subject~activity, mean)
dcast(meldata, subject+activity, mean)
dcast(meldata, subject + activity, mean)
dcast(meldata, subject + activity ~ variable, mean)
nrow(meldata)
dcast(meldata, subject + activity ~ variable, mean)
result <- dcast(meldata, subject + activity ~ variable, mean)
nrow(result)
colnames(meldata)
factor(meldata$subject)
factor(meldata$activity)
result <- dcast(meldata, subject + activity ~ variable, mean)
dim(result)
meldata <- melt(data_set, id=c(subject, activity))
colnames(meldata)
result <- dcast(meldata, "subject" + "activity" ~ variable, mean)
dim(result)
result <- dcast(meldata, subject + activity ~ variable, mean)
dim(result)
dim(result)
melted <- melt(data_set, c('subject', 'activity'))
dim(melted)
res <- dcast(melted, subject + activity ~ variable, mean)
dim(res)
factor(melted$subject)
factor(melted$activity)
library(reshape2)
res <- dcast(melted, subject + activity ~ variable, mean)
dim(res)
colnames(res[, 5])
colnames(res[, 1:5])
res <- dcast(melted, subject ~ variable, mean)
dim(res)
res <- dcast(melted, activity ~ variable, mean)
dim(res)
res <- dcast(melted, activity + subject ~ variable, mean)
dim(res)
melted <- melt(data_set, 1:2)
dim(melted)
res <- dcast(melted, subject + activity ~ variable, mean)
dim(res)
dim(data_set)
dim(melted)
res <- dcast(melted, .~variable, mean)
res <- dcast(melted, ~variable, mean)
res <- dcast(melted, subject + activity ~ variable, mean)
dim(res)
t <- read.table('tidy_data_1.csv')
getwd()
t <- read.table('tidy_data_1.csv')
t <- read.csv('tidy_data_1.csv')
dim(t)
colnames(t)
class(t)
melted <- melt(t, 1:2)
dim(melted)
res <- dcast(melted, subject + activity ~variable, mean)
dim(res)
